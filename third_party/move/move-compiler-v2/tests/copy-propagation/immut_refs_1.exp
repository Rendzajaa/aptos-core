============ initial bytecode ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
  0: $t3 := borrow_local($t0)
  1: $t2 := infer($t3)
  2: $t1 := read_ref($t2)
  3: return $t1
}

============ after AvailableCopiesAnalysisProcessor: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
     # before: {}, after: {}
  0: $t3 := borrow_local($t0)
     # before: {}, after: {$t2 := $t3}
  1: $t2 := infer($t3)
     # before: {$t2 := $t3}, after: {$t2 := $t3}
  2: $t1 := read_ref($t2)
     # before: {$t2 := $t3}, after: {$t2 := $t3}
  3: return $t1
}

============ after CopyPropagation: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
  0: $t3 := borrow_local($t0)
  1: $t2 := infer($t3)
  2: $t1 := read_ref($t3)
  3: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
  0: $t3 := borrow_local($t0)
  1: $t1 := read_ref($t3)
  2: return $t1
}
