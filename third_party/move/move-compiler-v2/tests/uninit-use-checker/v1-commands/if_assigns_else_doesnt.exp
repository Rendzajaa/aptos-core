============ initial bytecode ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: u64
  0: $t1 := 42
  1: $t0 := infer($t1)
  2: $t3 := 42
  3: $t2 := ==($t0, $t3)
  4: if ($t2) goto 5 else goto 7
  5: label L0
  6: goto 10
  7: label L1
  8: $t4 := 42
  9: abort($t4)
 10: label L2
 11: return ()
}

============ after uninitialized_use_checker: ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: u64
     # before: { no: $t0, $t1, $t2, $t3, $t4 }, after: { no: $t0, $t2, $t3, $t4 }
  0: $t1 := 42
     # before: { no: $t0, $t2, $t3, $t4 }, after: { no: $t2, $t3, $t4 }
  1: $t0 := infer($t1)
     # before: { no: $t2, $t3, $t4 }, after: { no: $t2, $t4 }
  2: $t3 := 42
     # before: { no: $t2, $t4 }, after: { no: $t4 }
  3: $t2 := ==($t0, $t3)
     # before: { no: $t4 }, after: { no: $t4 }
  4: if ($t2) goto 5 else goto 7
     # before: { no: $t4 }, after: { no: $t4 }
  5: label L0
     # before: { no: $t4 }, after: { no: $t4 }
  6: goto 10
     # before: { no: $t4 }, after: { no: $t4 }
  7: label L1
     # before: { no: $t4 }, after: all initialized
  8: $t4 := 42
     # before: all initialized, after: all initialized
  9: abort($t4)
     # before: { no: $t4 }, after: { no: $t4 }
 10: label L2
     # before: { no: $t4 }, after: { no: $t4 }
 11: return ()
}
