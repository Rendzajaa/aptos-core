============ initial bytecode ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: &u64
     var $t1: &u64
     var $t2: u64
     var $t3: bool
     var $t4: u64
     var $t5: &u64
     var $t6: u64
     var $t7: u64
  0: $t2 := 5
  1: $t1 := borrow_local($t2)
  2: $t0 := infer($t1)
  3: $t5 := move($t0)
  4: $t4 := read_ref($t5)
  5: $t6 := 5
  6: $t3 := ==($t4, $t6)
  7: if ($t3) goto 8 else goto 10
  8: label L0
  9: goto 13
 10: label L1
 11: $t7 := 42
 12: abort($t7)
 13: label L2
 14: return ()
}

============ after uninitialized_use_checker: ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: &u64
     var $t1: &u64
     var $t2: u64
     var $t3: bool
     var $t4: u64
     var $t5: &u64
     var $t6: u64
     var $t7: u64
     # before: { no: $t0, $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7 }
  0: $t2 := 5
     # before: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7 }, after: { no: $t0, $t3, $t4, $t5, $t6, $t7 }
  1: $t1 := borrow_local($t2)
     # before: { no: $t0, $t3, $t4, $t5, $t6, $t7 }, after: { no: $t3, $t4, $t5, $t6, $t7 }
  2: $t0 := infer($t1)
     # before: { no: $t3, $t4, $t5, $t6, $t7 }, after: { no: $t3, $t4, $t6, $t7 }
  3: $t5 := move($t0)
     # before: { no: $t3, $t4, $t6, $t7 }, after: { no: $t3, $t6, $t7 }
  4: $t4 := read_ref($t5)
     # before: { no: $t3, $t6, $t7 }, after: { no: $t3, $t7 }
  5: $t6 := 5
     # before: { no: $t3, $t7 }, after: { no: $t7 }
  6: $t3 := ==($t4, $t6)
     # before: { no: $t7 }, after: { no: $t7 }
  7: if ($t3) goto 8 else goto 10
     # before: { no: $t7 }, after: { no: $t7 }
  8: label L0
     # before: { no: $t7 }, after: { no: $t7 }
  9: goto 13
     # before: { no: $t7 }, after: { no: $t7 }
 10: label L1
     # before: { no: $t7 }, after: all initialized
 11: $t7 := 42
     # before: all initialized, after: all initialized
 12: abort($t7)
     # before: { no: $t7 }, after: { no: $t7 }
 13: label L2
     # before: { no: $t7 }, after: { no: $t7 }
 14: return ()
}
